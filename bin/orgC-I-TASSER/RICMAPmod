#!/usr/bin/perl
#PBS -e !ERRFILE!
#PBS -o !OUTFILE!
#PBS -l !WALLTIME!
#PBS -l !NODE!
#
use Math::Trig;
#
############ setup  the environment and Working DIRectory ###
$ENV{'PATH'}="/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/pgi/linux86/bin";
$ENV{'LD_LIBRARY_PATH'}="/usr/local/lib:/usr/lib:/lib";

##### report node -------->
`hostname`=~/(\S+)/;
$node=$1;
printf "hostname: $node\n";
$time=`date`;
printf "starting time: $time";
$pwd=`pwd`;
printf "pwd: $pwd";
##^^^^^^^^^^^^^^^^^^^^^^^^^^

$s="!S!";
$o="!O!";
$data_dir="!DATA_DIR!/$s";  #for seq.txt
$work_dir="/tmp/!USER!/!TAG!";
$bindir="!BIN_DIR!";
$cont_dir="!CON_DIR!"; ## path for all the contact programs
$bindir1="$cont_dir/ricmap";
$pythondir="/nfs/amino-library/anaconda/bin";
$bindir2="$bindir/bin";

################ working directory ########################
`/bin/rm -fr $work_dir`;
`/bin/mkdir -p $work_dir`;
chdir "$work_dir";

`cp $data_dir/seq.txt ./`;
@seqtxts=`cat seq.txt`;
$sequence="";
foreach $seqtxt(@seqtxts){
    goto pos6 if($seqtxt=~/\>/);
    $seqtxt=~s/\s//mg;
    $seqtxt=~s/\n//mg;
    $sequence=$sequence.$seqtxt;
  pos6:;
}
$Lch=length $sequence;
open(seq,">protein.fasta");
printf seq ">protein\n";
for($i=1;$i<=$Lch;$i++){
    $a=substr($sequence,$i-1,1);
    printf seq "$a";
    $seqQ{$i}=$a;   #only for check
    if($i==int($i/60)*60){
        printf seq "\n";
    }
}
printf seq "\n";
close(seq);

######### Copy MSA to tmp ############
#$aln="$data_dir/MSA/protein_uniref90_metaclust.aln";
$aln="$data_dir/MSA/!MSA!";
if (-s "$aln"){
    `/bin/cp $aln protein.aln`;
}else{
    printf "error: $aln does not exist!\n";
    exit();
}

print "------------------ run ricmap ---------------\n";
system("export OMP_NUM_THREADS=1;$pythondir/python $bindir1/ricmap2.py -msafile $work_dir/protein.aln -seq $work_dir/protein.fasta -save $work_dir/ricmap.map");

open(a,"$work_dir/ricmap.map");
$n=0;
while($line=<a>){
    if($line=~/(\S+)\s+(\S+)\s+(\S+)/){
        $n++;
        $I{$n}=$1;
        $J{$n}=$2;
        $conf{$n}=$3;
    }
}
close(a);
open(a,">$work_dir/ricmap.dat");
printf a "$n\n";
for($i=1;$i<=$n;$i++){
    printf a "%5d %5d %8.3f\n",$I{$i},$J{$i},$conf{$i};
}
close(a);

print "------------------ rescale ricmap confidence score ---------------\n";
system("$bindir2/modify_cscores.pl $work_dir ricmap protein.aln $bindir");
`/bin/cp $work_dir/ricmap2.dat $data_dir/ricmap.dat`;

################# endding procedure ######################
`rm -rf $work_dir`;
$time=`date`;
printf "ending time: $time";
`sync`;
`sync`;
sleep(1);
exit();


